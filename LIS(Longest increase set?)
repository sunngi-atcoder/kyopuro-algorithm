import bisect
#seqの最長(単調増加)増加部分列を出す

#LIS[i]は長さi+1の増加部分列のうち、最後の値がもっとも小さいもの
def longest(seq):
    LIS = [seq[0]]
    for i in range(len(seq)):
        if seq[i] > LIS[-1]:
            LIS.append(seq[i])
        else:
            LIS[bisect.bisect_left(LIS, seq[i])] = seq[i]
    return len(LIS)





#広義単調増加部分列の場合######################################
import bisect
#seqの最長(単調増加)増加部分列を出す

#LIS[i]は長さi+1の増加部分列のうち、最後の値がもっとも小さいもの
#bisect_rightになる
def longest(seq):
    LIS = [seq[0]]
    for i in range(len(seq)):
        if seq[i] >= LIS[-1]:
            LIS.append(seq[i])
        else:
            LIS[bisect.bisect_right(LIS, seq[i])] = seq[i]
    return len(LIS)





#復元##################################
#https://qiita.com/recuraki/items/9ba63b343660da2437e8
#このサイトでわかる
